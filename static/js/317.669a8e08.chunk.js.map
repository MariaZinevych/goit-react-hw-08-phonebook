{"version":3,"file":"static/js/317.669a8e08.chunk.js","mappings":"iMAkBA,UAhBqB,WACnB,OACEA,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,MAAM,SAASC,QAAQ,SAASC,EAAE,OAAMC,UAC5CC,EAAAA,EAAAA,MAACC,EAAAA,GAAG,CAACC,EAAE,KAAIH,SAAA,EACTL,EAAAA,EAAAA,KAACS,EAAAA,EAAO,CAACC,UAAU,SAASC,KAAK,MAAMC,GAAI,EAAEP,SAAC,SAG9CL,EAAAA,EAAAA,KAACa,EAAAA,EAAI,CAACC,GAAG,IAAIJ,UAAU,SAASK,SAAS,KAAIV,SAAC,8FAOtD,C,iMCmBaQ,GAAOG,EAAAA,EAAAA,IAA2B,SAAcC,EAAOC,GAClE,IAAMC,GAASC,EAAAA,EAAAA,IAAe,OAAQH,GACtCI,GACEC,EAAAA,EAAAA,IAAiBL,GAD8BM,GAAzCF,EAAAG,UAAWH,EAAAnB,MAAOmB,EAAAI,WAAYJ,EAAAK,QAAWC,EAAAA,EAAAA,GAAAN,EAAAO,IAG3CC,GAAeC,EAAAA,EAAAA,GAAQ,CAC3BpB,UAAWO,EAAMf,MACjB6B,eAAgBd,EAAMQ,WACtBO,cAAef,EAAMS,SAGvB,OACEO,EAAAA,EAAAA,KAACC,EAAAA,EAAAA,GAAOC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACNjB,IAAAA,EACAM,WAAWY,EAAAA,EAAAA,IAAG,cAAenB,EAAMO,YAC/BK,GACAN,GAAA,IACJc,MAAOlB,IAGb,IAEAN,EAAKyB,YAAc,M,0JCpCN7B,GAAUO,EAAAA,EAAAA,IAA+B,SACpDC,EACAC,GAEA,IAAMC,GAASC,EAAAA,EAAAA,IAAe,UAAWH,GACzCI,GAA+BC,EAAAA,EAAAA,IAAiBL,GAA1BM,GAAdF,EAAAG,WAAcG,EAAAA,EAAAA,GAAAN,EAAAO,IAEtB,OACEK,EAAAA,EAAAA,KAACC,EAAAA,EAAAA,IAAOC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACNjB,IAAAA,EACAM,WAAWY,EAAAA,EAAAA,IAAG,iBAAkBnB,EAAMO,YAClCD,GAAA,IACJc,MAAOlB,IAGb,IAEAV,EAAQ6B,YAAc,S,uBCrCtB,SAASR,EAAQS,GACf,IAAMC,EAAQC,OAAOC,OAAO,CAAC,EAAGH,GAChC,IAAK,IAAII,KAAOH,OACK,IAAfA,EAAMG,WACDH,EAAMG,GAEjB,OAAOH,CACT,C","sources":["pages/NotFoundPages.js","../node_modules/@chakra-ui/layout/src/text.tsx","../node_modules/@chakra-ui/layout/src/heading.tsx","../node_modules/@chakra-ui/object-utils/dist/chunk-R3DH46PF.mjs"],"sourcesContent":["import { Box, Flex, Heading, Text } from '@chakra-ui/react';\n\nconst NotFoundPage = () => {\n  return (\n    <Flex align=\"center\" justify=\"center\" h=\"75vh\">\n      <Box w=\"sm\">\n        <Heading textAlign=\"center\" size=\"4xl\" mb={6}>\n          404\n        </Heading>\n        <Text as=\"p\" textAlign=\"center\" fontSize=\"md\">\n          The page you are looking for may have been moved, deleted, or possibly\n          never existed.\n        </Text>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default NotFoundPage;","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { compact } from \"@chakra-ui/object-utils\"\n\nexport interface TextProps extends HTMLChakraProps<\"p\">, ThemingProps<\"Text\"> {\n  /**\n   * The CSS `text-align` property\n   * @type SystemProps[\"textAlign\"]\n   */\n  align?: SystemProps[\"textAlign\"]\n  /**\n   * The CSS `text-decoration` property\n   * @type SystemProps[\"textDecoration\"]\n   */\n  decoration?: SystemProps[\"textDecoration\"]\n  /**\n   * The CSS `text-transform` property\n   * @type SystemProps[\"textTransform\"]\n   */\n  casing?: SystemProps[\"textTransform\"]\n}\n\n/**\n * Used to render texts or paragraphs.\n *\n * @see Docs https://chakra-ui.com/text\n */\nexport const Text = forwardRef<TextProps, \"p\">(function Text(props, ref) {\n  const styles = useStyleConfig(\"Text\", props)\n  const { className, align, decoration, casing, ...rest } =\n    omitThemingProps(props)\n\n  const aliasedProps = compact({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing,\n  })\n\n  return (\n    <chakra.p\n      ref={ref}\n      className={cx(\"chakra-text\", props.className)}\n      {...aliasedProps}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nText.displayName = \"Text\"\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface HeadingProps\n  extends HTMLChakraProps<\"h2\">,\n    ThemingProps<\"Heading\"> {}\n\n/**\n * `Heading` is used to render semantic HTML heading elements.\n *\n * By default, renders as `h2` with themantic size `xl`\n *\n * @see Docs https://chakra-ui.com/docs/components/heading\n */\nexport const Heading = forwardRef<HeadingProps, \"h2\">(function Heading(\n  props,\n  ref,\n) {\n  const styles = useStyleConfig(\"Heading\", props)\n  const { className, ...rest } = omitThemingProps(props)\n\n  return (\n    <chakra.h2\n      ref={ref}\n      className={cx(\"chakra-heading\", props.className)}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nHeading.displayName = \"Heading\"\n","// src/compact.ts\nfunction compact(object) {\n  const clone = Object.assign({}, object);\n  for (let key in clone) {\n    if (clone[key] === void 0)\n      delete clone[key];\n  }\n  return clone;\n}\n\nexport {\n  compact\n};\n"],"names":["_jsx","Flex","align","justify","h","children","_jsxs","Box","w","Heading","textAlign","size","mb","Text","as","fontSize","forwardRef","props","ref","styles","useStyleConfig","_omitThemingProps","omitThemingProps","rest","className","decoration","casing","_objectWithoutProperties","_excluded","aliasedProps","compact","textDecoration","textTransform","jsx","chakra","_objectSpread","cx","__css","displayName","object","clone","Object","assign","key"],"sourceRoot":""}